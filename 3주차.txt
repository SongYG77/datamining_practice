데마 3주차
Numpy

원소가 같은 데이터타입만 가능하다 
행렬을 표현한다.
넘파이의 경우 리스트보다 처리 속도가 빠르다
(대용량 데이터 처리에 유용하다.)

전체 틀 변경도 가능
행이나 열 추가도 가능.

import numpy as np

shape : 각 차원의 크기
dtype : 튜플과 배열에 저장된 자료형
dim : 차원


-배열 생성.
arr1 = np.array(list)
리스트가 [[],[]] 이면 2차원으로 만들어짐

특수한 배열 만들기
zeros() : ()사이즈만큼 0으로 채워진 배열 생성
ones() : " 1로 채워진 배열생성
empty() : " 빈 배열 생성.

np.array([],dtype = np.float64 또는 np.int32) 등으로 데이터타입을 지정 가능.

arr.astype(np.float64)처럼 데이터 타입 변경도 가능하다.

벡터화 : 배열의 특징으로 for문을 사용하지 않고 일괄처리 가능
예) 행렬곱

names = np.array(['Bob','Joe','Bob','Joe','Joe','Joe','Joe')]
np.randn.seed(10)
data = np.random.randn(7,4)

names == 'Bob'을 하면 
array([True,False,False,True,False,False,False])
값이 나온다.

만약 
data[name == 'Bob']을 하게 되면 True인 0과 3번의 행을 가져오게 된다.

여러 행을 가져올 땐 
arr[1,3,5] 처럼 1,3,5행을 가져오게 한다.

reshape((a,b)) a행 b열로 만들겠다는 뜻 대신 사이즈를 맞춰야 한다.

 arr[[1,5,7,2]][:, [0,3,1,2]]
이렇게 하면 행은 1,5,7,2 순서로 가지고  열은 모두 가져오는데 0,3,1,2순서대로 가져오라는 뜻이다.

전치와 축 바꾸기.
모양을 바꾸는 것은 reshape
행과 열 자체를 바꾸는 것은 transpose((1,0)) 전치 (1,0)은 행하고 열을 바꾼다는 뜻?

행렬의 내적은 np.dot
arr.dot(arr.T, arr) 내적을 하려면 처음의 열과 두번째의 행 수가 같아야한다.

3차원 (면,열,행) 형태이다
transpose((1, 0, 2)) 형태로 되어진다면 
열을 먼저 채우고 원래는 행을 채워야 하는데
저렇게 되면 면을 먼저 채우게 된다.
즉 괄호안에 먼저 채우는 순서라고 보면 된다
열 면 행

원래의 배열 
[
[[0,1,2,3],
[4,5,6,7]],

[[8,9,10,11],
[12,13,14,15]],
]

전치 한 것
[
[[0,1,2,3],
[8,9,10,11],

[[4,5,6,7],
[12,13,14,15]],
]

