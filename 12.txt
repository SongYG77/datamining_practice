데마 12주차

scikit learn
파이썬의 머신러닝을 구현한 라이브러리중 하나이다.


사이킷 런에서의 데이터표현방식
테이블로서의 데이터.
여태까지 사용한 테이블들.(행,열)

특징은 수치값들 등등 으로 나타낸 것이고 대상은 분류되어 있는 것으로 생각을 하면 된다.

보통 X는 특징 Y는 대상이라고 많이 한다. 붓꽃데이터를 보면 꽃잎의 길이나 넓이 등이 특징이고 그 붓꽃의 종이 대상이라고 보면 된다.

API 기초

1. 일정 데이터와 클래스를 임포트에서 모델의 클래스 선택.

2. 모델의 초모수(파라미터값)를 선택한다.

3. 데이터의 특징배열과 대상벡터로 배체한다.

4. 모델에 fit을 해 데이터에 적합시킨다.

5. 모델의 새 데이터에 적용한다 predict, transform 사용


지도학습 예 : 선형회귀(라벨링이 있다) classification


이번 시간은 Linear Regression을 사용할 예정이다.

하이퍼 파라미터를 선택해야한다.

모델이 인스턴스화 되고 나면 이제 데이터를 특징행렬과 대상벡터로 배치한다. X,Y값을 만들어주는 것이다.

그리고 모델이 fit한다.
model.coef_ 기울기
model.intercept_ y절편

최적화된 모델을 찾는 것이 중요하다


비지도 학습 예제 : 붓꽃 차원
클래스가 나눠져있지 않는 경우를 비지도 학습이라고 한다.

붓꽃 데이터는 4차원이였다. (열이 4개엿다)

데이터의 근본적인 특징은 유지하면서 더 낮은 차원을 가지는 적절한 표현방식이 존재하는지 알아보는 것이다.

4차원 이상의 차원보다 2차원 데이터를 플로팅하는 것이 더 쉽기 때문이다.

빠른선형차원 축소 기법인 주성분을 사용하였다.(차원 축소 방법 : PCA)

from sklearn.decomposition import PCA

model = PCA(n_components = 2)
클래스를 2개로 나눈다. 즉 4가지 특징중 2개를 찾겟다.

model.fit
X_2D = model.transform(X)
X를 2차원으로 만듬.

이제 2가지 특징을 가졋기 때문에
df['PCA1'] = X_2D[:,0]
df['PCA2'] = X_2D[:,1]
로 두 옵션을 가지고
plot을 찍어보면 대락적으로 원래 클래스 분류처럼 분류되는 것을 볼 수 있다.


비지도 학습: 붓꽃의 군집화
가우스 혼합모델 사용할 예정
from sklearn.mixture import GaussianMixture

model = GaussianMixture(n_components=3,
covariance_type='full')
하이퍼 파라미터 클래스(특징) 3개로 나누겟다.
model.fit(X_iris)
y_gmm = model.predict(X_iris)

y값은 모르기 때문에 (지도학습이 아니라) X만 fit하는 것이다.


iris['cluster'] = y_gmm

sns.lmplot(x="PCA1", y="PCA2", data=iris, hue='species',
col='cluster', fit_reg=False);

정확하진 않아도 정확도 높게 분류가 된다.


손글씨의 데이터를 차원축소하는데는 Isomap을 이용햇다.

confution matrix
정확도를 보기 위해서 사용하는 것이기도 한다. 그러면어디서 어떤 데이터와 오류가 많이 일어나는지 볼 수 있다.

아니면 그림에서 라벨을 다른 색상으로 표현할 수 있다.














